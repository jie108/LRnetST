q()
3+5
install.packages("Rdevtools")
install.packages("Rdevtool")
install.packages("devtools")
library(devtools)
q()
install.packages("Rcpp")
install.packages("RcppEigen")
install.packages("RcppArmadillo")
install.packages("RcppNumerical")
install.packages("knitr")
install.packages("rmarkdown")
library(Rcpp)
q()
library(devtools)
install_github(repo="jed-harwood/SGM")
q()
install_github("jie108/dagbagM/dagbag")
library(devtools)
install_github("jie108/dagbagM/dagbag")
install.packages("~/Dropbox/Projects/Shrabanti_projects_2018_/dagbag_1.1.tar.gz", repos = NULL, type = "source")
install.packages("~/Dropbox/Projects/Shrabanti_projects_2018_/dagbag_1.1.tar.gz", repos = NULL, type = "source")
version
500*log(19744/500)+6*log(500)
500*log(19744/500)+6*log(500)
log(e)
log(10)
log(exp(1))
500*log(19744/500)+6*log(500)
500*log(19744/500,10)+6*log(500,10)
500*log((19744+851)/500)+4*log(500)
500*log((19744+851)/500,10)+4*log(500,10)
(19744+851)/40-(500-8)
(19744+851)/(19744/494)-(500-8)
q()
18+70*0.2+92*0.1+82*0.35+5+95.2*0.15
91.6*0.15+59*0.2+57*0.1+46*0.35+87.5*0.2+5
91.6*0.15+59*0.2+67*0.1+46*0.35+87.5*0.2+5
91.6*0.15+59*0.2+67*0.1+46*0.35+87.5*0.2
91.6*0.15+59*0.2+67*0.1+46*0.35+87.5*0.+52
91.6*0.15+59*0.2+67*0.1+46*0.35+87.5*0.+5
91.6*0.15+59*0.2+67*0.1+46*0.35+87.5*0.2+5
18+82*0.35+5+70*0.2+(98+99+91+95+93)/5*0.15+92*0.1
q()
7.9*0.1
0.95^10
pi/2-1.66
pi-1.66
(pi-1.66)/(pi/2)
library(devtools)
install_github("jie108/dagbagM")
library(devtools)
install_github("jie108/dagbagM", subdir="dagbagM")
library(dagbagM)
data(example)
Y.n=example$Y # data matrix
p<- dim(Y.n)[2] # no. of nodes
true.dir=example$true.dir  #adjacency matrix of the data generating DAG
true.ske=example$true.ske  # skeleton graph of the data generating DAG
temp<- dagbagM::hc(Y=Y.n,nodeType=rep("c",p), whiteList=NULL, blackList=NULL, tol = 1e-6, standardize=TRUE, maxStep = 1000, restart=10, seed = 1,  verbose = FALSE)
adj.temp=temp$adjacency
library(foreach)
library(doParallel)
boot.adj<- dagbagM::hc_boot_parallel(Y=Y.n, n.boot=10, nodeType=rep("c",p), whiteList=NULL, blackList=NULL, standardize=TRUE, tol = 1e-6, maxStep = 1000, restart=10, seed = 1,  nodeShuffle=TRUE, numThread = 2,verbose = FALSE)
adj.bag=dagbagM::score_shd(boot.adj, alpha = 1, threshold=0)
sum(adj.bag==1&true.dir==0)/sum(adj.bag==1)
sum(adj.bag==1&true.dir==1)/sum(true.dir==1)
setwd("/Users/jie-mba15/Downloads/LRnetST-master/LRnetST")
library(devtools)
build()
install() ##ignore the warnings : or use install.packages("SGM_1.0.tar.gz") and the "lib" option to install to a personal directory
##7. load li
library(LRnetST)
hcSC_boot_parallel
library(LRnetST)
data(example)
Y.n=example$Y # data matrix
p<- dim(Y.n)[2] # no. of nodes
true.dir=example$true.dir  #adjacency matrix of the data generating DAG
true.ske=example$true.ske  # skeleton graph of the data generating DAG
temp<- LRnetST::hcSC(Y=Y.n,nodeType=rep("c",p), whiteList=NULL, blackList=NULL, tol = 1e-6, scale=TRUE, maxStep = 1000, restart=10, seed = 1,  verbose = FALSE)
str(temp)
adj.temp=temp$adjacency
library(foreach)
library(doParallel)
boot.adj<- LRnetST::hcSC_boot_parallel(Y=Y.n, n.boot=10, nodeType=rep("c",p), whiteList=NULL, blackList=NULL, scale=TRUE, tol = 1e-6, maxStep = 1000, restart=10, seed = 1,  nodeShuffle=TRUE, numThread = 2,verbose = FALSE)
adj.bag=LRnetST::score_shd(boot.adj, alpha = 1, threshold=0)
sum(adj.bag==1&true.dir==0)/sum(adj.bag==1) ## FDR
sum(adj.bag==1&true.dir==1)/sum(true.dir==1) ## Power
